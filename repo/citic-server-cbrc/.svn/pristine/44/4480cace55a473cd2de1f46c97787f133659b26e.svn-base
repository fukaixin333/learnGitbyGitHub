<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.citic.server.cbrc.mapper.CBRC_OuterPollingTaskMapper">

	<insert id="insertMC20_Task_Fact1" parameterType="java.util.List">
		insert into
		MC20_TASK_FACT1(TASKKEY, TASKID, SUBTASKID, TASKTYPE, DATATIME, BDHM, TASKOBJ, FREQ, TASKNAME, TASKCMD, TGROUPID, ISDYNA)
		<choose>
			<when test="_databaseId == 'oracle'">
				<foreach collection="list" item="item" index="index" separator="UNION ALL">
				select
					#{item.taskKey, jdbcType=VARCHAR},
					#{item.taskID, jdbcType=VARCHAR},
					#{item.subTaskID, jdbcType=VARCHAR},
					#{item.taskType, jdbcType=VARCHAR},
					#{item.datatime, jdbcType=VARCHAR},
					#{item.bdhm, jdbcType=VARCHAR},
					#{item.taskObj, jdbcType=VARCHAR},
					#{item.freq, jdbcType=VARCHAR},
					#{item.taskName, jdbcType=VARCHAR},
					#{item.taskCMD, jdbcType=VARCHAR},
					#{item.tGroupID, jdbcType=VARCHAR},
					#{item.isDYNA, jdbcType=VARCHAR}
				from MP01_DUAL
				</foreach>
			</when>
			<otherwise>
				values
				<foreach collection="list" item="item" index="index" separator=",">
				(
					#{item.taskKey, jdbcType=VARCHAR},
					#{item.taskID, jdbcType=VARCHAR},
					#{item.subTaskID, jdbcType=VARCHAR},
					#{item.taskType, jdbcType=VARCHAR},
					#{item.datatime, jdbcType=VARCHAR},
					#{item.bdhm, jdbcType=VARCHAR},
					#{item.taskObj, jdbcType=VARCHAR},
					#{item.freq, jdbcType=VARCHAR},
					#{item.taskName, jdbcType=VARCHAR},
					#{item.taskCMD, jdbcType=VARCHAR},
					#{item.tGroupID, jdbcType=VARCHAR},
					#{item.isDYNA, jdbcType=VARCHAR}
				)
				</foreach>
			</otherwise>
		</choose>
	</insert>

	<insert id="insertMC20_Task_Msg" parameterType="java.util.List">
		insert into
		MC20_TASK_MSG(TASKKEY, CODE, BDHM, MSGNAME, MSGPATH, ATTACHPATH, ATTACHNAME, CREATEDT, PACKETKEY)
		<choose>
			<when test="_databaseId == 'oracle'">
				<foreach collection="list" item="item" index="index" separator="UNION ALL">
					select
					#{item.taskkey, jdbcType=VARCHAR},
					#{item.code, jdbcType=VARCHAR},
					#{item.bdhm, jdbcType=VARCHAR},
					#{item.msgname, jdbcType=VARCHAR},
					#{item.msgpath, jdbcType=VARCHAR},
					#{item.attachpath, jdbcType=VARCHAR},
					#{item.attachname, jdbcType=VARCHAR},
					#{item.createdt, jdbcType=VARCHAR},
					#{item.packetkey, jdbcType=VARCHAR}
					from MP01_DUAL
				</foreach>
			</when>
			<otherwise>
				values
				<foreach collection="list" item="item" index="index" separator=",">
					(
					#{item.taskkey, jdbcType=VARCHAR},
					#{item.code, jdbcType=VARCHAR},
					#{item.bdhm, jdbcType=VARCHAR},
					#{item.msgname, jdbcType=VARCHAR},
					#{item.msgpath, jdbcType=VARCHAR},
					#{item.attachpath, jdbcType=VARCHAR},
					#{item.attachname, jdbcType=VARCHAR},
					#{item.createdt, jdbcType=VARCHAR},
					#{item.packetkey, jdbcType=VARCHAR}
					)
				</foreach>
			</otherwise>
		</choose>
	</insert>

	<insert id="insertMC20_WS" parameterType="java.util.List">
		insert into MC20_WS(BDHM, WSBH, XH, WJMC, WJLX, WSLB, MD5, WSPATH)
		<choose>
			<when test="_databaseId == 'oracle'">
				<foreach collection="list" item="item" index="index" separator="UNION ALL">
					select
					#{item.bdhm, jdbcType=VARCHAR},
					#{item.wsbh, jdbcType=VARCHAR},
					#{item.xh, jdbcType=VARCHAR},
					#{item.wjmc, jdbcType=VARCHAR},
					#{item.wjlx, jdbcType=VARCHAR},
					#{item.wslb, jdbcType=VARCHAR},
					#{item.md5, jdbcType=VARCHAR},
					#{item.wspath, jdbcType=VARCHAR}
					from MP01_DUAL
				</foreach>
			</when>
			<otherwise>
				values
				<foreach collection="list" item="item" index="index" separator=",">
					(
					#{item.bdhm, jdbcType=VARCHAR},
					#{item.wsbh, jdbcType=VARCHAR},
					#{item.xh, jdbcType=VARCHAR},
					#{item.wjmc, jdbcType=VARCHAR},
					#{item.wjlx, jdbcType=VARCHAR},
					#{item.wslb, jdbcType=VARCHAR},
					#{item.md5, jdbcType=VARCHAR},
					#{item.wspath, jdbcType=VARCHAR}
					)
				</foreach>
			</otherwise>
		</choose>

	</insert>

	<insert id="insertBr40_cxqq" parameterType="com.citic.server.cbrc.domain.Br40_cxqq">
		insert into
		br40_cxqq (
		qqdbs,qqcslx,tasktype,sqjgdm,mbjgdm,ztlb,ajlx,jjcd,beiz,fssj,qqrxm,qqrzjlx,qqrzjhm,qqrdwmc,qqrsjh,xcrxm,xcrzjlx,xcrzjhm,status,orgkey,qrydt,qqrbgdh,xcrsjh,xcrbgdh,last_up_dt,recipient_time
		) values (
		#{qqdbs, jdbcType=VARCHAR},
		#{qqcslx, jdbcType=VARCHAR},
		#{tasktype, jdbcType=VARCHAR},
		#{sqjgdm, jdbcType=VARCHAR},
		#{mbjgdm, jdbcType=VARCHAR},
		#{ztlb, jdbcType=VARCHAR},
		#{ajlx, jdbcType=VARCHAR},
		#{jjcd, jdbcType=VARCHAR},
		#{beiz, jdbcType=VARCHAR},
		#{fssj, jdbcType=VARCHAR},
		#{qqrxm, jdbcType=VARCHAR},
		#{qqrzjlx, jdbcType=VARCHAR},
		#{qqrzjhm, jdbcType=VARCHAR},
		#{qqrdwmc, jdbcType=VARCHAR},
		#{qqrsjh, jdbcType=VARCHAR},
		#{xcrxm, jdbcType=VARCHAR},
		#{xcrzjlx, jdbcType=VARCHAR},
		#{xcrzjhm, jdbcType=VARCHAR},
		#{status, jdbcType=VARCHAR},
		#{orgkey, jdbcType=VARCHAR},
		#{qrydt, jdbcType=VARCHAR},
		#{qqrbgdh, jdbcType=VARCHAR},
		#{xcrsjh, jdbcType=VARCHAR},
		#{xcrbgdh, jdbcType=VARCHAR},
		#{last_up_dt, jdbcType=VARCHAR},
		#{recipient_time, jdbcType=VARCHAR}
		)
	</insert>

	<insert id="insertBr41_kzqq" parameterType="com.citic.server.cbrc.domain.Br41_kzqq">
		insert into
		br41_kzqq (
		qqdbs,qqcslx,tasktype,sqjgdm,mbjgdm,ztlb,ajlx,jjcd,beiz,fssj,qqrxm,qqrzjlx,qqrzjhm,qqrdwmc,qqrsjh,xcrxm,xcrzjlx,xcrzjhm,status,orgkey,qrydt,hzsj,last_up_dt,recipient_time
		) values(
		#{qqdbs, jdbcType=VARCHAR},
		#{qqcslx, jdbcType=VARCHAR},
		#{tasktype, jdbcType=VARCHAR},
		#{sqjgdm, jdbcType=VARCHAR},
		#{mbjgdm, jdbcType=VARCHAR},
		#{ztlb, jdbcType=VARCHAR},
		#{ajlx, jdbcType=VARCHAR},
		#{jjcd, jdbcType=VARCHAR},
		#{beiz, jdbcType=VARCHAR},
		#{fssj, jdbcType=VARCHAR},
		#{qqrxm, jdbcType=VARCHAR},
		#{qqrzjlx, jdbcType=VARCHAR},
		#{qqrzjhm, jdbcType=VARCHAR},
		#{qqrdwmc, jdbcType=VARCHAR},
		#{qqrsjh, jdbcType=VARCHAR},
		#{xcrxm, jdbcType=VARCHAR},
		#{xcrzjlx, jdbcType=VARCHAR},
		#{xcrzjhm, jdbcType=VARCHAR},
		#{status, jdbcType=VARCHAR},
		#{orgkey, jdbcType=VARCHAR},
		#{qrydt, jdbcType=VARCHAR},
		#{hzsj, jdbcType=VARCHAR},
		#{last_up_dt, jdbcType=VARCHAR},
		#{recipient_time, jdbcType=VARCHAR}
		)
	</insert>

	<insert id="insertBr40_wh_attach" parameterType="java.util.List">
		insert into Br40_wh_attach(fileno,qqdbs,wjmc,wjlx,wslx,filepath,create_dt,tasktype,wsbh)
		<choose>
			<when test="_databaseId == 'oracle'">
				<foreach collection="list" item="item" index="index" separator="UNION ALL">
					select
					#{item.xh, jdbcType=VARCHAR},
					#{item.bdhm, jdbcType=VARCHAR},
					#{item.wjmc, jdbcType=VARCHAR},
					#{item.wjlx, jdbcType=VARCHAR},
					#{item.wslb, jdbcType=VARCHAR},
					#{item.wspath, jdbcType=VARCHAR},
					#{item.datetime, jdbcType=VARCHAR},
					#{item.tasktype, jdbcType=VARCHAR},
					#{item.wsbh, jdbcType=VARCHAR}
					from MP01_DUAL
				</foreach>
			</when>
			<otherwise>
				values
				<foreach collection="list" item="item" index="index" separator=",">
					(
					#{item.xh, jdbcType=VARCHAR},
					#{item.bdhm, jdbcType=VARCHAR},
					#{item.wjmc, jdbcType=VARCHAR},
					#{item.wjlx, jdbcType=VARCHAR},
					#{item.wslb, jdbcType=VARCHAR},
					#{item.wspath, jdbcType=VARCHAR},
					#{item.datetime, jdbcType=VARCHAR},
					#{item.tasktype, jdbcType=VARCHAR},
					#{item.wsbh, jdbcType=VARCHAR}
					)
				</foreach>
			</otherwise>
		</choose>
	</insert>

	<delete id="deleteMC20_WS" parameterType="String">
        <![CDATA[ delete from mc20_ws where bdhm = #{bdhm} ]]>
	</delete>

	<delete id="delBr40_cxqq" parameterType="String">
  		<![CDATA[ delete from br40_cxqq where qqdbs = #{qqdbs} and tasktype = #{tasktype} ]]>
	</delete>

	<delete id="delBr41_kzqq" parameterType="String">  
  		<![CDATA[ delete from br41_kzqq where qqdbs = #{qqdbs} and tasktype = #{tasktype} ]]>
	</delete>

	<delete id="delBr40_wh_attach" parameterType="String">  
	 	 <![CDATA[ delete from br40_wh_attach where qqdbs = #{qqdbs} and tasktype =#{tasktype}]]>
	</delete>

	<select id="queryBr40_cxqq_acct_dynamic_main" parameterType="String" resultType="com.citic.server.cbrc.domain.Br40_cxqq">
		select * from Br40_cxqq_acct_dynamic_main
		where STATUS_CD = '1' and (LASTPOLLINGTIME is null or <![CDATA[ #{datatime} >= LASTPOLLINGTIME ]]>)
	</select>

	<update id="closeBr40_cxqq_acct_dynamic_main" parameterType="String">
		update Br40_cxqq_acct_dynamic_main set status_cd = '0' where STATUS_CD = '1' and <![CDATA[ mxjzsj <= #{datatime} ]]>
	</update>

	<select id="updateBr40_cxqq_acct_dynamic_main" parameterType="String">
		update Br40_cxqq_acct_dynamic_main set LASTPOLLINGTIME = #{datatime}, POLLINGLOCK = #{pollinglock}
		where RWLSH = #{aid} and TASKTYPE = #{tasktype}
	</select>

	<update id="updateBr41_cxqq_back_dynamic" parameterType="String">
		update br40_cxqq_back a set status='3' where <![CDATA[ a.jssj <#{datatime} ]]>
		and a.seq='0'and a.status='2'
		and exists(select 'x' from br40_cxqq b where b.qqdbs=a.qqdbs and b.tasktype=a.tasktype and b.qqcslx in('02','03'))
	</update>
</mapper>